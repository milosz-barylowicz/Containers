name: sanitizers

on:
  push:
    branches: [ '**' ]
  pull_request:
    branches: [ '**' ]
  workflow_dispatch:
    inputs:
        build-type:
          description: 'build type'
          required: true
          default: Debug
          type: choice
          options:
          - Debug
          - Release
          - RelWithDebInfo
          - MinSizeRel

env:
  BUILD_DIR: ${{ github.workspace }}/build
  TEST_DIR: ${{ github.workspace }}/build/tests

jobs:
  asan:
    runs-on: [ ubuntu-22.04 ]

    steps:
    - uses: actions/checkout@v4.1.1

    - name: configuring CMake
      run: cmake -B ${{ env.BUILD_DIR }} -S ${{ github.workspace }} -DASan=ON -DCMAKE_BUILD_TYPE=${{ inputs.build-type }}

    - name: building
      run: cmake --build ${{ env.BUILD_DIR }}

    - name: running ASan
      working-directory: ${{ env.TEST_DIR }}
      run: ./run_all_unit_tests.sh

  ubsan:
    runs-on: [ ubuntu-22.04 ]

    steps:
    - uses: actions/checkout@v4.1.1

    - name: configuring CMake
      run: cmake -B ${{ env.BUILD_DIR }} -S ${{ github.workspace }} -DUBSan=ON -DCMAKE_BUILD_TYPE=${{ inputs.build-type }}

    - name: building
      run: cmake --build ${{ env.BUILD_DIR }}

    - name: running USan
      working-directory: ${{ env.TEST_DIR }}
      run: ./run_all_unit_tests.sh

  lsan:
    runs-on: [ ubuntu-22.04 ]

    steps:
      - uses: actions/checkout@v4.1.1

      - name: configuring CMake
        run: cmake -B ${{ env.BUILD_DIR }} -S ${{ github.workspace }} -DLSan=ON -DCMAKE_BUILD_TYPE=${{ inputs.build-type }}

      - name: building
        run: cmake --build ${{ env.BUILD_DIR }}

      - name: running LSan
        working-directory: ${{ env.TEST_DIR }}
        run: ./run_all_unit_tests.sh
